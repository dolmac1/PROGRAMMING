/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode* result = new ListNode(0);
		ListNode* result_imsi = result;
        if(l1 == NULL){
            return l2;
        }
        if(l2==NULL){
            return l1;
        }
		while (l1 != NULL && l2 != NULL) {
			if (l1->val <= l2->val) {
				result_imsi->next = l1;
				l1 = l1->next;
			}
			else {
				result_imsi->next = l2;
				l2 = l2->next;
			}
			result_imsi = result_imsi->next;
		}

		if (l1 != NULL) {
			result_imsi->next = l1;
		}
		else if (l2 != NULL) {
			result_imsi->next = l2;
		}

		return result->next;
    }
};

//https://leetcode.com/problems/merge-two-sorted-lists
