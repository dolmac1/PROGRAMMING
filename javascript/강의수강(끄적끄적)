<01. HTML & CSS 첫걸음 / 개요>
1강 - 개요
- html 은 뼈대를 만들고
- css 가 모양을 만들어줌(예쁘게 만들어주는 것)
- js 는 콘텐츠를 바꾸고 움직이는 등 페이지를 동적으로 꾸며주는 역할
- 웹 페이지 만들 때, 각 언어가 가지고 있는 특징을 명확하게 사용해서 만들어야함(생산성을 위해서 복잡한 구조)
-------------------------------
3강 - 웹표준과 웹 접근성
- 웹 표준은 w3c에서 규정한 표준 기술이나 규칙 - 이 표준을 기준으로 웹 브라우저를 만드는데 이 표준을 브라우저만드는 업체마다 해석하는 차이, 새로운 기술의 삽입 등으로 조금 씩 다르게 보일 수 있음
- 웹 표준은 w3c의 권고안이라고 보면 됨
- 크로스 브라우징은 조금씩 다르게 구동되는 브라우저들에서 동일한 사용자 경험을 줄 수 있도록 구연하는 기술, 방법(인터넷 익스플로러는 약간 달라서 표준화하기 쉽지 않음)
- 웹 접근성은 정상적인 웹 콘텐츠 사용이 가능한 사용자부터 고령자, 장애인 같은 제한이 있는 사용자들도 동등하게 접근할 수 있는 콘텐츠를 제작하는 방법을 말함 (청각장애인을 위한 자막, 마우스 사용불가인 사람을 키보드로만 이용 가능) -> 웹 접근성을 준수하는 개발 필요
-------------------------------
4강 - 에디터 소개
- 웹 개발은 툴에 대한 종속성이 거의 없음(메모장만 사용해서도 개발 가능하나 비효율적)
- 툴 장단점
- Sublime text 리소스가 상대적으로 가벼운 프로그램
- Atom 맥에는 최적화가 잘 되어있으나 윈도우는 추천 x
- Brackets는 어도비에서 만들었고 오픈소스, 시각적인 결과물을 확인하는데는 특화되어있으나 성능 최적화가 잘 안되어있음
- vscode 가볍고 확장기능 다수 보유, 무료
- Web storm 은 통합 개발 환경 프로그램임, 확장기능 필요없음 굉장히 편하지만 별도의 비용 지불 필요
-------------------------------
6,7강 - vs code 한글 패치, beautify & live server
확장 프로그램들
-Html 파일에서 !치고 tab치면 자동으로 html 기본 서식이 작성된다
-Vscode 한글팩 : Korean language pack 깔고 vscode를 재부팅하면됨
-Beautify : 자동으로 깔끔하게 정렬(단, 설치하고 단축키를 설정해줘야함) - cmd + alt + l
-live server : html 소스를 웹창으로 자동으로 볼 수 있도록 해주는 것(오른쪽 아래 go live를 클릭하면 됨 또는 우클릭 후 open with live server 클릭
-------------------------------
8강 - 그 외 확장 프로그램과 알아두면 좋은 단축키
- 탭에서 우클릭으로 화면 분할해서 쓸 수 있음
- 탭 종료는 cmd + w
- 태그로 한번에 묶고싶으면 묶고싶은 부분 드래그 -> cmd + shift + p -> wrap -> 묶을 태그 입력 후 엔터
-------------------------------
9강 - 이미지에 대한 이해
- 웹에서 사용하는 이미지는 방식이 비트맵과 벡터로 나뉨
- 비트맵은 픽셀이 모여 만들어진 정보의 집합, 레스터 이미지라고도 함, 픽셀 단위로 렌더링함, 대부분의 이미지가 비트맵형식
- 벡터는 수학적 정보의 형태들이 만든 결과물, 이미지가 가지고 있는 점,선,면의 위치, 색상 등의 정보를 온전히 가지고 있어서 그를 화면에 렌더링, 해상도가 자유로움, 수학적 정보를 가지고 있기때문에 이미지 확대 축소로 용량이 변하진 않음
-------------------------------
10강 - jpg, png, gif, webp, svg
- jpg는 압축률이 훌륭해서 사진이나 예술 분야에서 많이 사용, 손실압축, 표현색상도가 뛰어나 고해상도 표시장치에 적합, 24비트 컬러, 이미지의 품질과 용량 조절 용이, 가장 널리쓰임(높은 압축률, 적은용량)
- png는 비손실 압축, gif의 대체포맷으로 개발, 비손실 압축이라 용량을 효과적으로 줄이진 못함, 8비트 24비트 컬러 이미지 처리, alpha channel 지원(투명도), w3c의 권장 포맷임(투명도 지원)
- gif는 이미지 파일 내에 이미지 및 문자열 정보 저장 가능, 비손실 압축, 여러장의 이미지를 한 개 파일로 담을 수 있어서 움짤을 만들 수 있음, 8비트 컬러만 지원(동영상 같은 이미지)
- 언제 이 포맷을 사용할 지 잘 정해서 써야함
- webp는 구글에서 만든 이미지 포맷, 완벽한 손실/비손실 압축 지원, gif같은 애니메이션 지원, aplpha channel도 지원(완벽한 포맷이지만 지원 브라우저가 적다)
- svg는 마크업 언어 기반의 벡터 그래픽을 표현하는 포맷, 해상도의 영향에서 자유로움, css로 스타일링 가능, javascript로 event handling 가능, 코드 혹은 파일로 사용 가능(다루기 까다로움)
-------------------------------
11강 - 특수 기호
- 특수문자 모르는 명칭들
- ` : 그레이브(grave) //이 표시는 한글상태에서는 option+₩해야 입력됨
- ~ : 틸드(tilde)
- ^ : 캐럿(catet)
- * : 에스터리스크(asterisk)
- () : 퍼렌서시스(parenthesis) - 소괄호
- {} : 브레이스(brace) - 중괄호
- [] : 브래킷(bracket) - 대괄호
- <> : 앵글 브래킷(angle bracket) - 꺽쇠괄호
- 특수문자 참고용 : https://www.freeformatter.com/html-entities.html
-------------------------------
12강 - 오픈소스와 라이선스
- 오픈소스는 어떤 제품을 개발하는 과정에서 필요한 소스코드나 설계도를 누구나 열람하고 접근할 수 있도록 공개하는 것
- 오픈소스는 보통 무료 저작권이고 공짜이지만 상업이용으로는 제한이 있거나 비용을 지불해야할 수 있음
- 괜찮은 오픈소스를 찾았다면 라이선스를 찾아보는게 중요함 free라고 되어있는 무료를 찾는게 중요
- 자주 보는 오픈소스 라이센스
- apache licence : 아파치에서 만든 라이선스, 개인적/상업적 이용, 배포, 수정, 특허신청 가능
- mit licence : mit에서 만든 라이선스로 개인 소스에 이 라이선스를 사용하고 있다는 표시만 해주면 제약 없음
- bsd licence : 버클리 캘리포니아대학에서 개발, 라이선스 표시만 지켜주면 됨
- beerware : 개발자들이 오픈소스 사용하면 오픈소스 개발자를 만나게 되면 맥주를 사줘야 하는 라이센스
- OpenSource.org 사이트에서 라이센스 정보 확인 가능
--------------------------------------------------------------------------------------------------------------------------------

<02.html & css 첫걸음 / html>
1강 - 기본 문법
- html 태그는 < > 사이에 각자의 의미를 가지고 있는 것으로 <tag> </tag>를 요소라고 부름
- 사실상 tag와 요소는 같은것이라고 보면 된다.
- <tag> 와 </tag> 사이에 컨텐츠를 입력
- html의 주석은 <!-- -->
- <h1></h1>은 제목, <p></p>는 문단
- 열리고 닫히는 태그가 하나의 묶음임
---------------------------------
2강 - 속성과 값
- 태그의 기능을 확장하기 위해 속성을 사용 <tag 속성="값"></tag>
- 예시 : <img src="./image.jpg" alt="대체텍스트"/> //src 는 소스 alt는 대체 텍스트
-     : <div class="my_div">김용수</div> //div 는 의미가 없는 분할임, class는 태그의 별명이라고 보면 됨
---------------------------------
3강 - 부모요소, 자식요소
- 태그A가 태그B의 콘텐츠로 사용하면 태그B는 태그A의 부모요소, 태그B는 자식 요소
- <parent>
    <child></child>
  </parent>
---------------------------------
4강 - 빈 태그
- 빈 태그는 비어있는 태그라는 뜻으로 닫히는 개념이 없는 태그들이라고 보면 됨
- ex <img ~~~~~~ />
- html5버전에서는 뒤에 /써도되고 안써도됨
- 단 xhtml환경에서 개발하는 경우에는 빈태그에 /를 꼭 붙여야함
- 앵간하면 /를 쓰던지 안쓰던지 통일성 있게 하는 것이 좋음
- 빈태그들은 대부분 속성="값"이 붙는다
---------------------------------
5강 - doctype
- <html>
    <head>
      <meta charset = "utf-8">
      <title>제목</title>
      <link rel="stylesheet" href="./css/main.css">
      <script src="./js/main.js"></script>
    </head> //html의 정보
    <body> 
      <div>
        ......
      </div>
    </body> //html의 구조
  </html> //html 파일의 범위
- DOCTYPE는 DTD(Document Type Definition)이라하며 마크업 언어에서 문서 형식을 정의
- 웹 브라우저의 버전을 알려줌 (html 1,2,3,4,5, xhtml이 있으며 html5가 가장 최신버전
- <!DOCTYPE html> 이라고 쓰면 html5로 돌아감
---------------------------------- 
6강 - head 태그
- head 태그 내에 들어가는 태그들
- title태그 : <title></title> 웹 브라우저의 탭에 나타낼 이름을 지정
- meta태그 : <meta> html문서의 기타 모든 정보를 나타냄, 빈태그임
  - <meta charset = "utf-8"> : 텍스트 인코딩 방식을 지정, 무조건 넣어줘야한다.
  - <meta name="author" content="김용수"> : 나타내고 싶은 정보를 name 내용물을 content에 넣음
  - charset : 문자인코딩 방식, name : 제공하기 위한 정보의 종류, content : name이나 http-equi속성의 값을 제공
- link태그 : <link> 외부 문서를 연결할 때 사용, css나 html, icon 문서들을 가지고올 때 사용, 빈태그
  - <link rel="stylesheet" href = "./css/main.css"> : 스타일시트 속성의 main.css를 가져옴
  - <link rel="icon" href="./a.png"> : 아이콘 a.png를 가져옴
  - rel : (필수)현재 문서와 외부문서의 관계, href : 외부문서의 위치
- style태그 : <style></style> css를 외부문서가 아닌 html문서에 직접 작성할 때 사용
  - <style>
  -  img{
  -   width: 100px;
  -   height:200px;
  -  }
  - </style>
- script태그 : <script></script>js를 불러오거나 작성하는 태그
  - <script src="./a.js"></srcript> : js를 외부에서 가져옴
  - <script> function ......... </script> : js를 내부에서 작성
---------------------------------
7강 - body 태그, 웹 표준 검사
- body 태그 내에 들어가는 태그들
- div 태그 : <div></div> 문서의 분할을 할 때 사용하는 것으로 의미는 없음, 특정 부분씩 묶을 때 사용한다고 보면 됨
  - <div>
      <p></p>
    </div>
    <div>
      <div>
        <h1></h1>
      </div>
    </div>
- img 태그 : <img> html에 이미지를 삽입할 때 사용하는 태그로 빈태그임
  - <img src="./a.png" alt="a"> : 이미지 a.png를 삽입하겠다, 대체 텍스트는 a
  - src : (필수) 이미지의 경로, alt : (필수) 이미지의 대체 텍스트
- 웹표준 검사하기 : w3c validator에 접속하여 html 문서를 업로드하면 웹표준에 맞는지 기본적인 검사를 해줌(https://validator.w3.org/)
---------------------------------
8강 - 예제
- 예제 만드는  index_2_8.html 
---------------------------------

<03. html & css 첫걸음 / css>
1강 - 기본 문법과 선택자의 역할
- css 기본 형태
  - 선택자 {
        속성: 값;
        속성: 값;
   }
- 선택자 내의 속성들을 값으로 지정해준다
  - div{
        font-size:20px;
        color: red;
    }
    이면 div 태그 내의 내용들의 폰트 크기는 20px, 색은 빨간색
---------------------------------
2강 - 속성과 값
- 속성과 값은 글자색, 너비, 높이, 여백 등 스타일을 지정할 때 사용
  - div{
      color: red; /* 글자색 */
      font-size:20px; /* 글자크기 */
      width:300px; /* 가로 너비 */
      margin:20px; /* 바깥 여백 */
      padding:10px 20px; /*안쪽여백 위아래, 좌우 */
      position: absolute; /* 위치 */
   }
---------------------------------
3강 - 선언 방식
- 태그에 직접 선언하는 인라인 방식, 직접 태그를 찾아서 직접 넣어줘야하기 때문에 동일한 동작을 여러번 해야할 수 있어서 안좋다
  - <div style="color: red;"> 태그에 직접 작성하기 </div>
- html 내장 방식, html style 태그 안에 포함, 해당 파일 내에서만 사용 가능
  - <head>
      <style>
        div {
          color: red;
          font-size: 20px;
        }
      </style>
    </head>
    <body>
      <div> 여기에 css 적용 </div>
    </body>
- 외부에서 가져오기, 여러개의 html 파일에서 계속해서 재활용 가능
  - <head> <!-- html -->
      <link rel="stylesheet" src="./css/main.css">
    </head>
    <body>
      <div> 외부에서 가져와서 여기에 적용 </div>
    </body>
  - div{ /* main.css */
      color: red;
    }
---------------------------------
4강 - 선언 방식 예제
- 3강에 대한 예시(./3강)
---------------------------------
5강 - 선택자
- 선택자를 입력하는 부분에 css를 적용하려는 태그의 이름을 입력
  - h1{
        원하는 css
    }
- 태그의 이름만으로는 정확한 위치를 지정할 순 없음
- 태그에다가 클래스라는 별칭을 지정하여 클래스 선택자를 사용하여 css를 적용 가능
  - .title {
        원하는 스타일
    }
- 클래스는 태그 내에 class="class명"으로 지정해주며 css에서 사용할 때에는 앞에 class를 나타내는 .을 입력해줘야함
  - <p class="title">제목</p> 이런식으로 클래스 지정
---------------------------------
6강 - 속성 1  크기
- 선택자{
    속성 : 값;
  }
- 속성은 크기, 여백, 색상 같은 눈에 보이는 스타일을 지정할 수 있음
- 크기를 지정해주는 태그들
- width는 가로 너비를 지정
  - ex)div{
        width: 300px;
       }
- height는 요소의 세로 너비를 지정
  - div{
        height: 150px;
    }
- 맥 개발자 도구는 cmd + alt + i누르면 나옴
- 글씨 크기는 font-size 태그
- 대부분의 브라우저에서는 글자크기 font-size는 16px가 기본이라고 보면 됨
- ./3강/main_c_6.css 에 예시
---------------------------------
7강 - 속성 2  여백
- 여백은 margin 과 padding 이 있음
- margin은 요소의 바깥에 존재하는 여백
 - div {
     margin: 20px;
   }
- 위의 margin은 위 아래 왼쪽 오른쪽 전부 20px이라고 보면 된다
- 위 아래 좌 우를 따로 속성을 지정하고 싶다면 margin-top, margin-right, margin-left, margin-bottom으로 따로따로 지정할 수 있음.
- margin을 단축 속성, margin-top, margin-right, margin-left, margin-bottom을 개별 속성이라고 부름
- 단축속성이라고 불리는 애들은 무조건 개별 속성이 있음
- padding은 요소의 내부에 존재하는 여백을 의미함
  - div {
      padding: 20px;
    }
- margin과 마찬가지로 padding 도 상하좌우를 여백을 따로 지정할 수 있음.
- padding 을 사용 시에는 영역의 너비가 늘어난다.
- ./3강/index_3_7.html ./3강/main_3_7.css참고
---------------------------------
8강 - 속성 3  색상
- color는 font-color, text-color 라는 속성 없이 그냥 color 를 사용함
  - div {
      color: red;
    }
- background는 요소의 배경 속성을 지정하는 것, 따라서 background-color를 사용하여 지정
  - div { 
      background-color: red;
    }
- background는 단축 속성이라 색상 여백 등 다양한 것을 지정할 수 있음
- ./3강/index_3_8.html ./3강/main_3_8.css를 참조
---------------------------------
9,10,11강 예제
- width 와 height 는 기본값으로 auto로 지정되어있음
- div 태그는 보통 width 는 100% height는 자동으로 안의 항목들의 항목들의 높이의 최대값으로 지정
- margin:auto 쓰면 가운데로 간다라고 보면 됨(좌우 여백을 같게 지정)
- float 속성을 사용하여 수직으로 되어있는 부분을 수평으로 만들 수 있음(float: left;)
- float 는 요소가 뜨는 상태로 만들어주는거라 배경색이 안나올 수 있는데 clearfix를 사용하면 배경에서 제외되지 않게 할 수 있음(나중에 배움) - 부모에 clearfix를 클래스에 넣어줘야함
- css도 html이랑 구조가 유사하게 작성하는 습관을 들어야 유지보수가 쉬움
- 수직 가운데 정렬은 위아래에 padding을 넣어서 가운데 정렬을 함
- 개발자 도구에서 속성을 복사해 갈 수 있음
- 보통 효과를 보는 곳에 속성을 넣음
---------------------------------

<04. html/개요, 요소 - 주요범위 & 메타데이터>

1강,2강,3강 블록, 인라인
- html 블록 레벨 요소와 인라인 요소를 모르면 css 사용하는데 문제가 생길 수 있음
  - 블록요소 : div, h1, p
  - 인라인 요소 : span, img
- 블록 요소
  - 사용 가능한 최대 가로 너비를 사용
  - 크기를 지정할 수 있다.
  - (width: 100%; height:0;로 시작) -> 가로 100%와 세로 0으로 시작하지만 사실 auto로 둘다 들어가있음
  - 수직으로 쌓임(글자를 넣으면 위에서 아래로 순서대로 쌓임)
  - padding, margin을 상하좌우 모두 사용 가능
  - 레이아웃을 잡는 용도로 사용
  - 블럭 요소를 인라인 요소로 바꾸고 싶으면 css에 display: inline; 설정 넣어주면 됨
- 인라인 요소
  - 필요한 가로 너비만 사용
  - 크기를 지정할 수 없다.
  - (width:0; height:0;으로 시작)
  - 수평으로 쌓임(글자를 넣으면 왼쪽에서 오른쪽으로 순서대로 쌓임) - 줄바꿈 시, 띄어쓰기 한칸
  - margin 사용시 좌우는 여백이 들어가나 상하는 외부여백이 안들어감, padding은 좌우는 정확하게 적용됨, 윗쪽은 적용x, 아래쪽은 배경 색깔 표현시 적용되는 것처럼 보이지만 아래에 다른 태그를 넣어보면 정상 동작 안함을 볼 수 있음
  - 텍스트를 다루는 용도로 사용
  - 인라인 요소를 블럭 요소로 바꾸고 싶으면 css에 display: block; 설정 넣어주면 됨
- display 는 기본값이 블록요소는 block, 인라인 요소는 inline으로 설정되어있음
 ---------------------------------
4강 주요범위 & 메타데이터
- 브라우저나 검색엔진은 html의 내용을 <html> 태그 안에 있는 범위만 인식함
- html의 lang 속성에 넣을 수 있는 언어는 ISO 639-1 에 검색해보면 나온다.
- 한국어는 ko라고 작성
- head 태그에는 html 문서 제목, 기타 정보, 스타일 직접입력, 스타일 외부에서 가져와서 연결
----------------------------------
5,6,7,8,9,10강 메타데이터
- 메타 태그는 빈태그라 닫는 태그가 없음
- 메타 태그는 속성이 없으면 아무런 역할을 하지 못함
- 메타 태그에 charset 속성을 이용하여 언어 설정
- EUC-KR : 완성형, 완성된 조합이 없을 경우에는 한글이 깨지는 현상이 일어날 수 있음
- UTF-8 : 조합형
- html 요소 레퍼런스를 보려면 구글에 html 요소 레퍼런스 mdn이라고 검색하면 맨 위에 나옴( 태그별로 설명 볼 수 있음)
- meta tag
  - charset : 언어 인코딩 설정
  - http-equiv : http 통신 프로토콜의 헤더 이름 설정 (나중에 자세히)
  - name : 어플리케이션 이름 지정
  - content : http-equv나 name 속성의 값을 설정
  - name과 content를 같이 쓴다
- mdn 사이트에서 태그 옆에 쓰레기통이 그려져 있는 경우에는 html5에서 삭제되었다는 것임, !모양은 사용에 주의하라는 것
- mdn 에서 브라우저의 각 태그 지원 현황도 볼 수 있다.
- link 태그로 링크를 지정할 수 있음, link 태그에는 rel과 href 속성 필요(rel은 어떤 관계인지, href는 주소)
  - hreflang : 링크된 리소스의 언어를 선택해줌, 순수히 조언이기때문에 안써도 상관 없음
  - rel : 링크된 문서와 현재 문서와의 관계
  - href : 상대적 주소, 절대적 주소 둘다 가능, 앞에 특수문자(./나 /)가 생략되있으면 ./가 붙어있다고 생각하면 된다.
- style 태그는 css 직접 입력할때 사용
  - 예전에는 <style type="text/css">라고 선언해서 썼지만 이제는 뒤에는 생략 가능
  - body에 써도 상관은 없지만 앵간하면 head 태그 안에 작성하자
- mime 타입이란 클라이언트에게 전송된 문서의 다양성을 알려주기 위한 메커니즘임, 종류가 참 많지만 대표적인것으로(text/html, image/png 등)
  - type 속성은 가지고 오는 것에 대한 타입을 지정 ex> <style type="text/css">
- base 요소는 문서에 포함된 모든 상대 url들의 기준 url
  - base는 그 경로를 사용하기전에 먼저 설정해두자
  - base는 html 문서에서 딱 한번만 작성할 수 있음
  - 주요하게 쓰일 경로를 설정해주는 것
-------------------------------------
<05. html/요소 - 콘텐츠 구분 & 문자 콘텐츠>

1강. body 내 구조 개념
- <header> 태그는 header를 나타내는 태그
- ul은 unordered tag를 나타내고 그 안의 내용을 li 태그를 사용하여 작성
- 각각의 위치에 알맞은 태그를 사용해야함
--------------------------------------
2강. 콘텐츠 구분 - header
- header태그와 footer 태그는 후손이 될 수 없음(header 안에 header 불가)
- header 태그에는 전역 속성만 넣을 수 있다(모든 태그에 사용할 수 있는 태그)
- 인터넷 익스플로러 9버전부터 header 태그를 지원했기때문에 별다른 상관 없이 사용가능
--------------------------------------
3강. 콘텐츠 구분 - footer
- footer태그는 사이트 가장 아래에 있는 정보을 적을때 사용하는 태그로 보통 사이트의 정보, 저작권 데이터, 관련된 문서의 링크 등에 대한 정보를 나타냄
- header, footer는 div와 다르게 의미를 가지고 있는 태그로써, 기계, 브라우저 등이 태그의 의미를 읽어낼 때 사용
- 의미를 가지고 있는 태그는 적재적소에 잘 활용하는 것이 중요함
--------------------------------------
4강. 콘텐츠 구분 - H1~H6
- H1~H6는 속성 사용 X
- 가장 윗 제목부터 가장 아랫 제목까지 지정해주는 것임
- 이 H1~H6를 사용할때 글씨 크기를 줄이기 위해서 낮은 단계를 사용하면 안된다.
- H1~H6의 CSS의 FONT-SIZE 속성을 사용하여 글씨 크기를 조절하여 사용하여야함.
- 단계를 건너뛰어서 사용하지 마라(ex. h1 다음에 h3쓰고 h2를 쓰지말라), 그 이유는 기기가 목차를 검색하거나 할때 문제가 생길 수 있음
- 첫번째 단계의 제목(H1)은 한페이지에 한개만 사용해라, h1은 전체 제목이기 때문에
- nesting : 
  - h1
      h2
      h2
        h3
        h3
      h2
        h3
          h4
          h4
      h2
  이런식으로 사용하라는 것
- 5강 index_1.html
----------------------------------------
5강. 콘텐츠 구분 - main
- main 태그는 문서 내부의 핵심적인 컨텐츠를 나타낼 때 사용
- 블로그 같은 곳에서 핵심 포스트 같은 것을 넣는 곳을 main 태그로 사용한다고 보면 된다
- main 태그는 인터넷 익스플로러에서는 지원해주지 않음
- https://heropy.blog/2019/05/26/html-elements/ 에 html 요소 총 정리된 문서있음
----------------------------------------
6강. 콘텐츠 구분 - article
- article은 독립적으로 구분되거나 재사용 가능한 영역을 설정
- 블로그의 포스트나 매거진 신문기사 등을 나타낼 때 사용
- h1 ~h6를 포함하여 식별
----------------------------------------
7강. 콘텐츠 구분 - section
- 문서의 일반적인 영역을 설정
- h1 ~h6를 포함하여 식별
- section 태그 내에는 article을 넣을 수 있고, article 태그 내에도 section을 넣을 수 있음
- div와 다른점은 div는 의미가 없는 반면, section 같은 경우에는 제목을 포함해서 의미를 가지고 있다.
- article > section > div 순으로 강하게 의미를 가지고 있다고 보면 된다 (article이 가장 강한 의미를 가지고 있다.)
----------------------------------------
8강. 콘텐츠 구분 - aside
- 문서의 별도 콘텐츠를 설정할 때 사용
- 보통 광고같은 것을 나타낼 때 사용
----------------------------------------
9강. 콘텐츠 구분 - nav
- 다른 페이지 링크를 제공하는 영역
- navigation, 보통 메뉴 (home, about, contact), 목차, 색인 등을 설정해주는 태그
- 일반적으로 영역을 설정해주는 태그는 블럭요소다
- https://www.w3schools.com/tags/tag_nav.asp에 자세한 예시가 있다.
- 5강 index_2.html
----------------------------------------
10강. 콘텐츠 구분 - address
- <body>, <article>, <footer>에 연락 정보를 나타내기 위한 태그
  - <address>
      <a href="mailto:dolmac@naver.com">dolmac@naver.com</a><br>
      <a href="tel:01096802005">010-9680-2005</a>
    </address>
- a태그의 href에 mailto를 쓰면 메일 쓰는 곳으로 넘어가고 tel을 넣으면 전화하는 화면으로 넘어간다.
----------------------------------------
11강. 콘텐츠 구분 - div
- 본질적으로 아무것도 나타내지 않는 콘텐츠 영역을 설정해주는 태그
- 보통 css를 삽입하거나 javascript를 통해서 제어할 때 보통 많이 사용
- 꾸미는 목적으로 사용한다라고 보면 된다.
----------------------------------------

