<10. css/실습환경>

1강. css reset
- css는 처음에 초기화를 하고 사용하여야 한다, 브라우저마다 다른 모양으로 출력될 수 있기 때문에 동일하게 기본적으로 제공하는 스타일로 보여주기 위해서 초기화하는 것
- reset css cdn 에 가서 초기화 css 를 복사해서 사용할 수 있다.
- reset css cdn은 무조건 우리가 정의한 css보다 위에 link 해야함
- 10강 index_1.html, main_1.css
-----------------------------------------------
2강. codepen
- 구글에 codepen 검색
- start coding 눌러서 할 수 있음
-----------------------------------------------
3강. emmet
- css에 .box와 같이 class로 클래스 선택자로 선언을 해놓으면 include한 html에서 tag.class하고 엔터 치면 바로 그 태그의 class명을 가진 태그를 만들어줌
- >하고 선택자를 하면 자식 요소로 만들어짐
- emmet문법은 보통 태그를 만들때 많이 사용한다
- 보통 에디터들이 emmet 문법을 제공하므로 따로 설치할 필요는 없다
- emmet 문법 + tab키로 사용
-----------------------------------------------
<11. css/개요, 선택자, 상속>

1강. 기본문법
- css는 화면의 모양을 바꿔주는 것
- css는 보통 선택자{ 속성:속성값; 속성:속성값; } 의 형태로 사용하며 속성과 속성값 사이에는 :, 속성끼리는 ;로 구분
- 선택자는 속성과 값을 지정할 때상을 검색할 때 사용
- 속성과 값은 검색된 대상에 지정될 css명령을 지정
- 주석은 /* */ 로 작성
-----------------------------------------------
2강. 선언방식
- 인라인 방식은 선택자가 필요없이 태그에 바로 사용
- 내장방식은 head 태그 안에 style 태그를 정의해서 css를 정의
- 선언방식은 외부에 선언되어있는 css파일을 가져오는 것으로 link태그를 통해서 가져온다. 보통 이방식을 사용
- @import 방식은 외부에 있는 문서를 가져오는 것으로 css내에서 외부의 css를 가져올 때 사용함 (@import url("./mainframe.css"); 이런식으로 사용)
- link는 html에서 @import 는 css에서 사용
- link 방식은 1번 코드가 불러와지고 2번코드가 불러와지는 뒤에 정의된 내용이 필요하면 @import 방식이 유용하게 사용가능
-----------------------------------------------
3강. 기본 선택자
- 4가지 선택자가 기본인데 전체선택자, 태그 선택자, 클래스 선택자, 아이디 선택자가 존재
- 전체 선택자는 *으로 나타내며 모든 요소를 선택할 때 사용
- 태그 선택자는 태그 이름으로 선택하여 css를 적용할 때 사용 ( div, head, p, ....등등)
- 클래스 선택자는 특정한 클래스를 지정하여 css를 적용할 때 사용 .클래스명으로 사용
- 아이디 선택자는 특정한 아이디를 지정하여 css를 적용할 때 사용하며 #id 를 통해 사용 (id는 고유하게 사용)
-----------------------------------------------
4강. 복합 선택자
- 일치 선택자는 선택자 E와 F가 모두 만족하는 경우 css를 지정 예를들어 span.orange와 같이 사용하며 span 태그중 클래스가 orange인 곳에 적용
- 자식 선택자는 선택자의 자식 선택자를 선택하여 css를 적용하는 것으로 ul > .orange와 같이 사용하며 ul태그의 자식인 곳 중에서 orange 클래스를 갖는 곳에 css 적용 >앞이 조건 뒤가 선택
- 후손 선택자는 E의 후손 F를 선택하는 것으로 띄어쓰기로 구분한다 div .orange와 같이 사용하며 div의 후손 중에서 .orange 클래스인 곳에 css를 적용한다 자식의 자식의 자식의 .....까지가 다 후손임
- 자식은 한 뎁스 아래만을 말하며 자식은 후손에 포함된다. 부모는 한뎁스 위를 말하며 부모는 조상에 포함된다.
- 인접 형제 선택자는 E의 다음 형제 요소 F하나만 선택, .orange + li 와 같은 형태로 사용하며 .orange 클래스를 갖는 태그의 다음 인접해있는 형제에 지정
- 일반 형제 선택자는 E의 다음 모든 형제 요소 F를 선택, .orange ~ li 와 같은 형태로 사용하며 .orange 클래스를 갖는 태그의 다음 형제들 모두에게 css 지정
-----------------------------------------------
5강. 가상클래스 선택자 - hover, active, focus
- 가상 클래스 선택자는 앞에 : 하나 붙어있음
- hover는 마우스 포인터가 올라가있는 동안에만 동작하는 css를 작성할 때 사용
- hover 예제 : 11강 index_1.html, main_1.css
- active는 마우스로 클릭하는 동안에만 css를 적용할 때 사용
- 변화를 천천히 하려면 transition:시간으로 지정해주면 됨
- active 예제 : 11강 main_1.css에 hover를 active로 변경
- focus는 input에 포커스가 지정되었을 때 사용
- focus 예제 : 11강 index_2.html, main_2.css
-----------------------------------------------
6강 가상클래스 선택자 - first-child, last-child
- first-child는 E가 형제 요소 중 첫번째 요소라면 선택하는 것으로 E:first-child같은 방식으로 사용
- last-child는 E가 형제 요소 중 마지막 요소라면 선택하는 것으로 E:last-child 같은 방식으로 사용
-----------------------------------------------
7강. 가상클래스 선택자 - nth-child
- n번째 자식요소를 선택하여 css를 적용하기 위해서 사용 0부터 사용 li:nth-child(2n)과 같은 형태로 사용하며 2,4,6,8....번째 자식들을 선택해서 css적용, +, -, *, / 같은 기호를 사용하여 수식으로 넣을 수 있음
-----------------------------------------------
8강. 가상클래스 선택자 - xxx-child 주의사항
- n번째에 다른 태그가 있으면 적용 안될수도 있음 오른쪽에서 왼쪽으로 읽는게 좋음
- 만약 .fruits p:nth-child(1)일 경우 fruits클래스의 p태그중 첫번째에 지정하는 것 같지만 첫번째가 p 가 아닌 다른 태그일경우 지정되지않느다
-----------------------------------------------
9강. 가상클래스 선택자 - nth-of-type, not
- nth-of-type은 E와 동일한 타입을 가진 것 중에서 n번째인 곳을 지정
- E:nth-of-type(n)으로 사용함 예를들어서 .fruit p:nth-of-child(1)하면 fruit클래스의 자식중에서 타입이 p인 것 중에서 첫번째를 지정해줌
- nth-of-type은 태그를 찾는데만으로 사용해야함(클래스 안댐)
- not은 조건에서 뺄 때 사용
- .fruits li:not(.strawberry)라고 사용하면 과일 클래스 안의 li태그들 중에서 딸기만 빼고 선택해서 css 적용
-----------------------------------------------
10강. 가상요소 선택자 - before
- 가상 클래스랑은 다르게 가상 요소 선택자는 가상요소를 생성해서 하는 것으로 ::을 붙여서 쓴다
- E::before는 요소 내부의 앞에 내용을 삽입할 때 사용
- ul>li{숫자$}*5처럼 사용하면 ul태그 밑에 li 5개 생성
- before 선택자 사용 시에 content: "내용";을 사용하지 않으면 우무런 효과가 일어나지 않음, 앞에 css를 적용하는거니까 content가 있어야하는것
- before 예시는 11강 index_3.html, main_3.css
-----------------------------------------------
11강. 가상요소 선택자 - after
- after는 요소의 뒤에 내용을 추가하는 것
- before와 마찬가지로 content: ""; 가 들어가야 css가 적용되는 것을 볼 수 있음
- content속성에 content: url("주소");로 해서 연결할 수 있음
- before, after는 : 하나만 써도 동작은 하지만 가상 클래스와 차별을 두기 위해서 ::를 쓴다(원래는 :가 하나쓰는걸로 출시되었으나 나중에 나뉘어 나온것임)
-----------------------------------------------
12강. 속성 선택자 - [attr], [attr=value]








